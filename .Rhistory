install.packages("Matching")
library("Matching")
data("lalonde")
names(data)
a=data("lalonde")
names(a)
a
lalonde
a=lalonde
head(a\)
head(a)
names(a)
attach(lalonde)
Y=lalonde$re78
Y
length(Y)
Tr=lalonde$treat
Tr
length(Tr)
glm1=glm(Tr~age+educ+black+hisp+married+nodegr+re74+re75, family=binomial, data=lalonde)
glm1
summary(glm1)
rr1 <- Match(Y = Y, Tr = Tr, X = glm1$fitted)
rr1
MatchBalance(Tr ~ nodegr, match.out = rr1, nboots = 1000, data = lalonde)
MatchBalance(Tr ~ re74, match.out = rr1, nboots = 1000, data = lalonde)
install.packages("HSAUR")
install.packages("Matching")
install.packages("FunctionalizeR")
install.packages("ShotgunFunctionalizeR")
189*10^6
x=(62*10^6)*75
x
x/(3*109)
x/(3*10^9)
install.packages("matR")
version
install.packages("matR", repo="http://dunkirk.mcs.anl.gov/~braithwaite/matR", type="source")
install.packages("matR", repo="http://dunkirk.mcs.anl.gov/~braithwaite/matR", type="source")
install.packages("matR", repo="http://dunkirk.mcs.anl.gov/~braithwaite/matR", type="source")
install.packages("C:/Users/lemasd/Downloads/matR-master.zip", repos = NULL)
install.packages("C:/Users/lemasd/Downloads/matR-master.zip", repos = NULL)
install.packages("matR", repo="http://dunkirk.mcs.anl.gov/~braithwaite/matR", type="source")
install.packages("reshape2")
install.packages("matR", repo="http://dunkirk.mcs.anl.gov/~braithwaite/matR", type="source")
traceback()
debug
install.packages ("matR", type = "source",
repo = "http://dunkirk.mcs.anl.gov/~braithwaite/matR")
utils::example("collection")
msession$debug()
library("matR", lib.loc="C:/Users/lemasd/Documents/R/win-library/3.0")
msession$debug()
install.packages("C:/Users/lemasd/Downloads/matR-master.zip", repos = NULL)
detach("package:matR", unload=TRUE)
install.packages("C:/Users/lemasd/Downloads/matR-master.zip", repos = NULL)
library("matR", lib.loc="C:/Users/lemasd/Documents/R/win-library/3.0")
vignette(package="matR")
install.packages("pwr", dependencies = FALSE)
library("pwr", lib.loc="C:/Users/lemasd/Documents/R/win-library/3.0")
library("pwr")
pwr.t.test(n=20,d=-1.4,sig.level=.0005,type="two.sample")
pwr.t.test(n=20,d=-1.4,sig.level=.005,type="two.sample")
install.packages("coxme", dependencies = FALSE)
library("nonrandom")
citation(package = "nonrandom", lib.loc = NULL)
install.packages("maps", dependencies = FALSE)
library("maps", lib.loc="C:/Users/lemasd/Documents/R/win-library/3.0")
detach("package:maps", unload=TRUE)
x <- c(0.80, 0.83, 1.89, 1.04, 1.45, 1.38, 1.91, 1.64, 0.73, 1.46)
x
y=c(1,1,1,1,1,2,2,2,2,2)
dim(y)
length(y)
wilcox.tes(x,y)
wilcox.test(x,y)
wilcox.test(x~y)
x=c(0.553495151,0.665328369,0.032505873,0.453962522,0.016123729,0.001244586,0.001071644,0.012848628)
x
y=c(1,1,1,1,2,2,2,2)
y=c(1,1,1,1,2,2,2,2);y
x=c(0.553495151,0.665328369,0.032505873,0.453962522,0.016123729,0.001244586,0.001071644,0.012848628);x
x=c(0.553495151,0.665328369,0.032505873,0.453962522,0.016123729,0.001244586,0.001071644,0.012848628);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
wilcox.test(x~y)
x=c(0.44286145,0.331764975,0.961843692,0.539432036,0.945460763,0.990839847,0.988680762,0.955897588);x
x=c(0.44286145,0.331764975,0.961843692,0.539432036,0.945460763,0.990839847,0.988680762,0.955897588);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
wilcox.test(x~y) #p-value = 0.02857
# Clostridia
# relative abundance
x=c(0.435046987,0.310460017,0.216557679,0.448820828,0.873048647,0.860417185,0.960840347,0.867302595);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
wilcox.test(x~y) #p-value = 0.1143
# Bacilli
# relative abundance
x=c(0.001608121,0.0167182,0.741095803,0.08147207,0.070610361,0.128222233,0.026098993,0.085621645);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
wilcox.test(x~y) #p-value =
#other
# relative abundance
x=c(0.003593145,0.002906656,0.005650435,0.006605442,0.038415508,0.007915567,0.010247594,0.031253784);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
wilcox.test(x~y) #p-value = 0.6857
# sequences
# relative abundance
x=c(39798,253556,15751,134586,76037,100435,44791,74327);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
wilcox.test(x~y) #p-value = 0.02857
# relative abundance
x=c(0.999693,0.999782,0.999238,0.999746,0.999698,0.999733,0.999601,0.999698);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
wilcox.test(x~y) #p-value = 1.0
x=c(0.999693,0.999782,0.999238,0.999746,0.999698,0.999733,0.999601,0.999698);x
y=c(1,1,1,1,2,2,2,2);y
wilcox.test(x~y) #p-value = 1.0
A=wilcox.test(x~y) #p-value = 1.0
A
# relative abundance
x=c(25.72,20.56,39,23.6,23.48,24.28,26.32,28.28);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
A=wilcox.test(x~y) #p-value = 0.8845
A=wilcox.test(x~y);A #p-value = 0.8845
# relative abundance
x=c(31.318,23.77,48.4286,27.4347,30.21,28.5267,35.3573,32.656);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
A=wilcox.test(x~y);A #p-value = 0.8857
# relative abundance
x=c(2.08836,1.54485,1.507,2.12603,2.41415,2.06706,1.84543,2.39293);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
A=wilcox.test(x~y);A #p-value = 0.6857
# relative abundance
x=c(0.446438,0.35466,0.285124,0.466738,0.531124,0.449791,0.391696,0.496854);x
# groups (CTRL vs HFD)
y=c(1,1,1,1,2,2,2,2);y
A=wilcox.test(x~y);A #p-value = 0.3429
version
R.version.string
plot.manhattan.LD <- function(data, gwas.result, chr, region, index.snp, p.value=0.05, bonferroni=T, mafThreshold=.05) {
shift <- 2.3
topMargin <- 0
# Helper function for retrieving MAF in a region (chromosome)
getMAF <- function(data, region) {
summ <- summary(gtdata(data)[,region])
tmp_maf <- (summ$P.22 + 0.5 * summ$P.12)/summ$NoMeasured
tmp_ma_count <- summ$P.22 + 0.5 * summ$P.12
tmp_het <- summ$P.12 / summ$NoMeasured
maf <- data.frame(snp=as.character(row.names(summ)),
chr=summ$Chromosome, pos=map(gtdata(data)[,region]),
allele=summ$A2, maf=tmp_maf, maCnt=tmp_ma_count, heterozygosity=tmp_het)
}
plot.manhattan.LD <- function(data, gwas.result, chr, region, index.snp, p.value=0.05, bonferroni=T, mafThreshold=.05) {
shift <- 2.3
topMargin <- 0
# Helper function for retrieving MAF in a region (chromosome)
getMAF <- function(data, region) {
summ <- summary(gtdata(data)[,region])
tmp_maf <- (summ$P.22 + 0.5 * summ$P.12)/summ$NoMeasured
tmp_ma_count <- summ$P.22 + 0.5 * summ$P.12
tmp_het <- summ$P.12 / summ$NoMeasured
maf <- data.frame(snp=as.character(row.names(summ)),
chr=summ$Chromosome, pos=map(gtdata(data)[,region]),
allele=summ$A2, maf=tmp_maf, maCnt=tmp_ma_count, heterozygosity=tmp_het)
}
startCoord <- region[1]
stopCoord  <- region[2]
myChromosome <- data@gtdata[ ,which(data@gtdata@chromosome == chr)]
region <- which(myChromosome@map >= startCoord & myChromosome@map <= stopCoord)
r2matrix <- r2fast(myChromosome, snpsubset = region)
r2matrix[lower.tri(r2matrix)] <- t(r2matrix)[lower.tri(r2matrix)]
markers <- which(data@gtdata@snpnames %in% names(region))
markers.coords <- data@gtdata@map[markers]
idx.marker <- which(data@gtdata@snpnames == index.snp)
idx.marker.coords <- data@gtdata@map[idx.marker]
pvals <- -log10(gwas.result@results$P1df[markers])
plot(markers.coords, pvals, type='n', xlab="Position (Mb)", ylab=expression(-log[10](p-value)), ylim=c(-shift, max(pvals)+3), axes=F)
# Plot grid
abline(h=seq(.5, max(pvals) + topMargin, .5), col="grey", lty=3)
#points(idx.marker.coords, -log10(gwas.mm@results$P1df[idx.marker]), col="red", pch=19, cex=1)
r2vec <- r2matrix[index.snp,]
r2vec[is.na(r2vec)] <- -1
r2col <- cut(r2vec, breaks=c(1.0,0.8,0.6,0.4,0.2,0.0,-1),
labels=rev(c("#9E0508","tomato","chartreuse3","cyan3","navy", "black")), include.lowest=T)
r2pch <- rep(19, length(r2col))
r2pch[which(r2col == "black")] <- 1
points(markers.coords, -log10(gwas.result@results$P1df[markers]), col=as.character(r2col), pch=r2pch, cex=.8)
if (bonferroni) {
p.value <- -log10(p.value/nids(data))
abline(h=-log10(p.value), col="red", lty=2)
}
legend(startCoord + 10, max(pvals) + 1, legend=c("0.8 - 1.0","0.6 - ", "0.4 -", "0.2 -", "0.0 -"), pch=19, bty='n',
col=c("#9E0508","tomato","chartreuse3","cyan3","navy"), cex=.7, title=expression(r^2))
# Plot MAF below Manhattan (shift units lower)
maf <- getMAF(data, region)
lines(markers.coords, 4 * maf$maf - shift, col="#2C7FB8")
# Plot horizontal line at MAF = 0.05
abline(h=mafThreshold * 4 - shift, col=rgb(1,0,0,1), lty=2)
# Plot axes
step <- (stopCoord - startCoord) / 5
axis(1, at = seq(startCoord, stopCoord, by=step), labels=format(seq(startCoord, stopCoord, by=step)/1e6, scientific=F, digits=3))
axis(2, at = 0:(max(pvals) + topMargin + 1))
axis(4, at = c(2 - shift, 1 - shift, 0.2 - shift, 0 - shift), labels = c(.5, .25, .05, 0))
mtext("MAF", side=2, at=0.2-shift, outer=F)
}
install_github('cgmisc', 'quiestrho')
library(devtools)
install_github('cgmisc', 'quiestrho')
install.packages("cgmisc", repos = "")
install.packages("GenABEL")
require("GenABEL")
install.packages("cgmisc", repos = "")
install.packages("cgmisc", dependencies = FALSE)
install.packages("cgmisc", repos="http://R-Forge.R-project.org")
install.packages("cgmisc", repos="http://R-Forge.R-project.org")
install.packages("cgmisc", repos = "")
install.packages("cgmisc", repos = "")
install_github('cgmisc', 'quiestrho')
library(devtools)
install.packages("devtools", dependencies = FALSE)
library(devtools)
install.packages("cgmisc", repos = "")
install_github('cgmisc', 'quiestrho')
install.packages("GenABEL")
require("cgmisc")
install_github('cgmisc', 'quiestrho')
data(cgmiscdat1)
install.packages("gap", dependencies = FALSE)
library(gap)
data(gap)
asplot(CDKNlocus, CDKNmap, CDKNgenes)
head(CDKNgenes)
head(CDKNlocus)
head(CDKNmap)
install.packages("gap", dependencies = FALSE)
install.packages("samplesize", dependencies = FALSE)
library("samplesize", lib.loc="C:/Users/lemasd/Documents/R/win-library/3.0")
library("samplesize")
n.wilcox.ord(power = 0.8, alpha = 0.05, t = 0.53, p = c(0.66, 0.15, 0.19), q = c(0.61, 0.23, 0.16))
16sample=8/16
sample16=8/16
sample16
n.wilcox.ord(power = 0.8, alpha = 0.05, t = 0.53, p = c(0.66, 0.15, 0.19), q = c(0.61, 0.23, 0.16))
library("samplesize")
n.wilcox.ord(power = 0.8, alpha = 0.05, t = 0.53, p = c(0.66, 0.15, 0.19), q = c(0.61, 0.23, 0.16))
sample16=8/16
sample16=8/16
sample16
n.wilcox.ord(power = 0.8, alpha = 0.05, t = 0.5, p = c(0.66, 0.15, 0.19), q = c(0.61, 0.23, 0.16))
n.wilcox.ord(power = 0.8, alpha = 0.05, t = 0.5, p = c(0.66, 0.15, 0.19), q = c(0.66, 0.15, 0.19))
library("vegan", lib.loc="C:/Users/lemasd/Documents/R/win-library/3.0")
data(varespec)
varespec
library("matR")
dependencies ()
library (ggplot2)
setInternet2(use = TRUE)
IDs <- c(gut1="4441695.3", gut2="4441696.3")
cc <- collection(IDs)
metadata(cc)
source("http://bioconductor.org/biocLite.R")
biocLite()
library(ShotgunFunctionalizeR)
install.packages("ShotgunFunctionalizeR", contriburl="http://shotgun.zool.gu.se")
install.packages("ShotgunFunctionalizeR", contriburl="http://shotgun.zool.gu.se")
install.packages("C:/Users/lemasd/Downloads/ShotgunFunctionalizeR_1.2-9.zip", repos = NULL)
library(ShotgunFunctionalizeR)
library("ShotgunFunctionalizeR", lib.loc="C:/Users/lemasd/Documents/R/win-library/3.0")
detach("package:ShotgunFunctionalizeR", unload=TRUE)
library(ShotgunFunctionalizeR)
install.packages("ShotgunFunctionalizeR", contriburl="http://shotgun.zool.gu.se")
install.packages("C:/Users/lemasd/Downloads/ShotgunFunctionalizeR_1.2-9.zip", repos = NULL)
library(ShotgunFunctionalizeR)
install.packages("multtest", dependencies = FALSE)
biocLite("multtest")
source("http://bioconductor.org/biocLite.R")
biocLite("multtest")
biocLite("ShotgunFunctionalizeR")
library(ShotgunFunctionalizeR)
library("ShotgunFunctionalizeR", lib.loc="C:/Users/lemasd/Documents/R/win-library/2.15")
install.packages("ShotgunFunctionalizeR", contriburl="http://shotgun.zool.gu.se")
install.packages("C:/Users/lemasd/Desktop/ShotgunFunctionalizeR_1.2-9 (1).zip", repos = NULL)
install.packages("C:/Users/lemasd/Desktop/ShotgunFunctionalizeR_1.2-9 (1).zip", repos = NULL)
library("ShotgunFunctionalizeR", lib.loc="C:/Users/lemasd/Documents/R/win-library/2.15")
library(ShotgunFunctionalizeR)
ls("package:ShotgunFunctionalizeR")
data(OceanCOG)
exportPattern("^[^\\.]")
exportPattern()
source("http://bioconductor.org/biocLite.R")
biocLite()
biocLite("multtest")
biocLite("ShotgunFunctionalizeR")
library(ShotgunFunctionalizeR)
install.packages("ShotgunFunctionalizeR", contriburl="http://shotgun.zool.gu.se")
source("http://bioconductor.org/biocLite.R")
biocLite()
library("ShotgunFunctionalizeR", lib.loc="C:/Users/lemasd/Documents/R/win-library/2.11")
testGeneCategories.dircomp()
?testGeneCategories.dircomp
?testGeneCategories.dircomp()
UseMethod("testGeneCategories.dircomp")
library(ShotgunFunctionalizeR)
rm(list=ls())
now=Sys.Date(); today=format(now, format="%d%b%y")
dir.source=c('C:/Users/lemasd/Documents/GitHub/microbes/R/')
library(devtools)
install.packages("knitr", dependencies = FALSE)
library("knitr", lib.loc="C:/Users/lemasd/Documents/R/win-library/3.1")
install.packages("markdown", dependencies = FALSE)
rm(list=ls())
now=Sys.Date(); today=format(now, format="%d%b%y")
rm(list=ls())
now=Sys.Date(); today=format(now, format="%d%b%y")
dir.source=c('C:/Users/dlemas/Documents/GitHub/microbes/R/')
setwd("C:/Users/lemasd/Documents/GitHub/microbes")
library(devtools)
