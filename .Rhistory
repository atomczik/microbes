setwd("C:/Users/lemasd/Documents/GitHub/microbes")
library(devtools)
library(microbes)
# Twin Study Data
meta <- twin_meta
otu.counts <- twin_otu_class_green
wgs.counts <- twin_wgs_L4_cog
otu.normed=normalize_counts(otu.counts)
sum(otu.normed[,2])
## Drop OTUs that occur in < 4 participants
otu.normed <- prevalence_crop(otu.normed, 0.2) ## removed 5
##Crop out bugs with low relative abundance bugs
otu.normed <- abundance_crop(otu.normed, 0.001) ## removed 3
## Relative Abundance Comparision
otu.normed
meta
str(meta)
grouping_variable=meta$bmi_group
library_id=meta$study_id
# Format Variables
library_id=as.character(library_id)
grouping_variable=as.character(grouping_variable)
# Transpose Count Table
otu.normed.t = setNames(data.frame(t(otu.normed[,])), row.names(otu.normed))
otu.normed.t$library_id <-row.names(otu.normed.t)
meta.grp=as.data.frame(cbind(library_id, grouping_variable))
merged.data <- merge( meta.grp, otu.normed.t, by="library_id")
# Group names (only works for 2 groups)
group_a=levels(merged.data$grouping_variable)[1]
group_b=levels(merged.data$grouping_variable)[2]
# Create names for colums
col1="OTU_name"
col2=paste(group_a,"_mean",sep="")
col3=paste(group_a,"_sd",sep="")
col4=paste(group_b,"_mean",sep="")
col5=paste(group_b,"_sd",sep="")
col6="p.value_t.test"
col7="p.value_wilcoxon"
names <- c(col1, col2, col3, col4, col5, col6, col7)
# Create index for loops
index=names(merged.data)
myIndex<-length(index)
# Calculate mean/sd
mean_group=aggregate(merged.data[3:myIndex],by=list(merged.data$grouping_variable),FUN=mean)
sd_group=aggregate(merged.data[3:myIndex],by=list(merged.data$grouping_variable),FUN=sd)
mean_group
grp.1.mean[1,]=mean_group[1,]
grp.1.meam=mean_group[1,]
grp.1.meam
mean.t = setNames(data.frame(t(mean_group)), row.names(mean_group))
mean.t
mean.df=mean.t[-1,]
mean.df
colnames(mean.df)=c(col2,col3)
mean.df
sd.t = setNames(data.frame(t(sd_group)), row.names(sd_group))
colnames(sd.df)=c(col4,col5)
# Create names for colums
col1="OTU_name"
col2=paste(group_a,"_mean",sep="")
col3=paste(group_a,"_sd",sep="")
col4=paste(group_b,"_mean",sep="")
col5=paste(group_b,"_sd",sep="")
col6="p.value_t.test"
col7="p.value_wilcoxon"
names <- c(col1, col2, col3, col4, col5, col6, col7)
col5
colnames(sd.df)=c(col4,col5)
sd_group=aggregate(merged.data[3:myIndex],by=list(merged.data$grouping_variable),FUN=sd)
sd.df=sd.t[-1,]
colnames(sd.df)=c(col4,col5)
sd.df
final=cbind(mean.df$col2,sd.df$col4)
final
mean.df$col2
mean.df
final=cbind(mean.df[1],sd.df[1])
final
sd.df
col4
col5
# Transpose mean/sd data.frames
# Mean
mean.t = setNames(data.frame(t(mean_group)), row.names(mean_group))
mean.df=mean.t[-1,]
colnames(mean.df)=c(col2,col4)
# SD
sd.t = setNames(data.frame(t(sd_group)), row.names(sd_group))
sd.df=sd.t[-1,]
colnames(sd.df)=c(col3,col5)
mean.df
final=cbind(mean.df[1],sd.df[1])
final
final=cbind(mean.df[1],sd.df[1],mean.df[2],sd.df[2])
final=as.numeric(cbind(mean.df[1],sd.df[1],mean.df[2],sd.df[2]))
final
final=cbind(mean.df[1],sd.df[1],mean.df[2],sd.df[2])
str(final)
dat <- sapply(final, as.numeric )
dat
final=as.data.frame(cbind(mean.df[1],sd.df[1],mean.df[2],sd.df[2]))
final
dat <- sapply(final, as.numeric )
dat
str(final)
final[1]=as.numeric(final[1])
mean_group=as.matrix(aggregate(merged.data[3:myIndex],by=list(merged.data$grouping_variable),FUN=mean))
mean_group
sd_group=as.matrix(aggregate(merged.data[3:myIndex],by=list(merged.data$grouping_variable),FUN=sd))
sd_group
mean.t = setNames(data.frame(t(mean_group)), row.names(mean_group))
mean.t
mean.df=mean.t[-1,]
colnames(mean.df)=c(col2,col4)
mean.df
